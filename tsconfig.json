{
    "ts-node": {
        "transpileOnly": true,
        "require": [
            // "typescript-transform-paths/register",
            "tsconfig-paths/register"
        ]
    },
    "compilerOptions": {
        /* Basic Options */
        "sourceMap": true, /* Generate corresponding .map file. */
        "outDir": "dist", /* Redirect output structure to the directory. */
        "target": "es2019" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */,
        "module": "commonjs" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
        "lib": ["es6", "es2019"] /* Specify library files to be included in the compilation. */,
        "allowJs": true /* Allow javascript files to be compiled. */,
        "jsx": "react-native" /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */,
        "noEmit": true /* Do not emit outputs. */,
        "isolatedModules": true /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
        //"strict": true /* Enable all strict type-checking options. */,
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        "allowSyntheticDefaultImports": true /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "experimentalDecorators": true /* Enables experimental support for ES7 decorators. */,
        "resolveJsonModule": true,
        "typeRoots": ["src/@types", "./node_modules/@types"],
        "baseUrl": "./" /* Base directory to resolve non-absolute module names. */,
        "paths":{
            "@config":["./src/config"],
            "@src":["./src/*"],
            "@adapters":["./src/adapters/index"],
            "@adapters/*":["./src/adapters/*"],
            "@routes":["./src/server/routes/index"],
            "@routes*":["./src/server/routes/*"],
            "@middlewares":["./src/server/middlewares/index"],
            "@middlewares*":["./src/server/middlewares/*"],
            "@controllers":["./src/server/controllers/index"],
            "@controllers*":["./src/server/controllers/*"],
            "@utils":["./src/server/utils/index"],
            "@utils*":["./src/server/utils/*"],
        },
        // "plugins": [
        //     { "transform": "typescript-transform-paths" },
        //     { "transform": "typescript-transform-paths", "afterDeclarations": true }
        //   ]

    },
    "exclude": ["node_modules"]
}  